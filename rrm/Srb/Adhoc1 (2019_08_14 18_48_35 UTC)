/* ADHOC1 */


new;
output file = ADHOC1.OUT reset;
outwidth 256;
output off;



/* READ AND TRANSFORM DATA */
/* VOTES */
load vote[82,4] = c:\codes\simple\srb\data\target.txt;
nint = vote[.,1]~vote[.,3]; /* interest rate from 1999.01 to 2007.10 */
nint = trimr(nint,0,2); /* interest rate from 1999.01 to 2007.10 */


/* INFLATION */
load datte[336,1] = c:\codes\simple\srb\data\datte.txt; /* Date from 1980.01 to 2007.12 */
load cpi[28,13] = c:\codes\simple\srb\data\cpi.txt; /* CPI index from 1980.01 to 2007.12 */
cpi = trimr(cpi',1,0)';
cpi = reshape(cpi,336,1);
cpi = datte~cpi;
cpi = trimr(cpi,0,3);

/* Compute year-to-year CPI inflation rate */
cpiinf = cpi[13:rows(cpi),1]~(100*ln(cpi[13:rows(cpi),2]./cpi[1:rows(cpi)-12,2])); /* inflation rate between 1981.01 and 2007.12 */


/* UNEMPLOYMENT */
load un[187,2] = c:\codes\simple\srb\data\unrate.txt; /* NSA unemployment rate from 1992.01 to 2007.07 */

/* Compute NAIRU and the unemployment gap using the HP filter */
hpobs = un[.,1];
hpun = hpnew(un[.,2],14400);
hpun = hpobs~hpun;


/* PUT DATA SET TOGETHER */
data = zeros(1,5);
i = 1;
do until i > rows(nint);
    p = selif(cpiinf,cpiinf[.,1] .eq nint[i,1]);
    u = selif(hpun,hpun[.,1] .eq nint[i,1]); 
    data = data|(nint[i,.]~1~p[2]~u[2]);
    i = i+1;
endo;
data = trimr(data,1,0);
data = real(data);

/* Select data */
datte = data[.,1];
nint = data[.,2];
target = data[.,3];
cpiinf = data[.,4];
hpun = data[.,5];


/* Separate the sample */
nob = rows(nint);
indb = zeros(nob,1); /* observations at lower bound */
indc = zeros(nob,1); /* observations at upper bound */
indx = zeros(nob,1); /* observations inside band */
i = 2;
do until i > nob;
    if nint[i,1] == nint[i-1,1];
        indx[i,1] = 1;
    else;
        if nint[i,1] >= nint[i-1,1];
            indb[i,1] = 1;
        else;
            indc[i,1] = 1;
        endif;
    endif;
i = i+1;
endo;
indx[1,1]=1;

datte = datte[2:nob];
target = target[2:nob];
cpiinf = cpiinf[2:nob];
hpun = hpun[2:nob];
pint = nint[1:nob-1];
nint = nint[2:nob];
indb = indb[2:nob];
indc = indc[2:nob];
indx = indx[2:nob];
nob = nob-1;


/* ESTIMATE REACTION FUNCTION */
library optmum;
#include optmum.ext;

_opgtol = 1.e-6;                  @ convergence criterion for gradient @
_opalgr = 2;                      @ selects algorithm for optimization @


/* PROCEDURE TO SET STARTING VALUES */
proc startval;
    local th;
    let th[5,1] =
      0.178295         0.895179        0.0550722       0.00625233         0.215562 ; 
    retp(th);
endp;

x = startval;
kp = 1;

output off;
{x,f,g,retcode} = optmum(&ofn,startval);
output file=ADHOC1.OUT on;

kp = 2;
x[5] = abs(x[5]);


/* PRINT FINAL ESTIMATES */
format /m3 /ro 16,6;
"ADHOC1.OUT";
"MODEL WITH ADHOC SMOOTHING AND HETEROGENEOUS INTERCEPTS";
"";"SWEDEN";

"";"1) ESTIMATES OF LINEAR MODEL";
"Coefficients: ";x';
hs = hessp(&ofn,x);
hs = real(hs);
vg = invpd(hs);

fit = x[1] +  x[2]*pint + x[3]*cpiinf + x[4]*hpun; 

ess = sumc(fit^2) - rows(nint)*meanc(nint)^2;
tss = sumc(nint^2) - rows(nint)*meanc(nint)^2;
res = nint-fit;
rmse = real((sumc(res.^2)/rows(nint))^.5);
mae = sumc(abs(res))/rows(nint);
r2 = ess/tss;

format /m3 /ro 16,6;
"";"Standard errors";sqrt(diag(vg))';
"";"T statistics";(x')./(sqrt(diag(vg))');
"";"Log Likelihood function";;-f;
"";"AIC";;2*rows(x)-2*(-f);
"";"SIC";;ln(nob)*rows(x)-2*(-f);
"";"RMSE";;rmse;
"MAE ";;mae;   
"R2  ";;r2;


/* FILTER DATA USING HP FILTER (Code written by Morten O. Ravn) */
proc hpnew(dat,lambda);
local u1, u, l, ff, t, v11, v22, v12, x, z, v, tt, d, i, m1, m2, de, i1, ib, e1, e2, b11, b12, b22, jj, hu,uu;

l=lambda;
u1 = dat;
ff=rows(dat');
t = rows(dat);
 
v11 = 1;
v22 = 1;
v12 = 0;
i=3; 
v=zeros(t,3); 
tt =zeros(t,ff); 
d = zeros(t,ff);
do until i>t;
	x=v11;
	z=v12;
 	v11=(1/L)+4*(x-z)+v22;
 	v12 = 2*x -z;
 	v22=x;
 	de = v11*v22-v12*v12;
 	v[i,1] = v22/de;
 	v[i,3] = v11/de;
 	v[i,2] = -v12/de;
 	x = v11+1;
 	z=v11;
 	v11 = v11-(v11*v11)/x;
 	v22 = v22-(v12*v12)/x;
 	v12 = v12-(z*v12)/x;
 	i=i+1;
endo;

u=u1;
m1=u[2,.]; 
m2 = u[1,.];
i=3;
do until i>t;
	x = m1;
 	m1=2*m1-m2;
 	m2=x;
 	tt[i-1,.] = v[i,1]*m1+v[i,2]*m2;
 	d[i-1,.] = v[i,2]*m1+v[i,3]*m2;
 	de = v[i,1]*v[i,3]-v[i,2]*v[i,2];
 	v11 = v[i,3]/de;
 	v12 = -v[i,2]/de;
 	z = (u[i,.]-m1)/(v11+1);
 	m1=m1+v11*z;
 	m2=m2+v12*z;
 	i=i+1;
endo;

tt[t,.] = m1;
tt[t-1,.] = m2;
m1 = u[t-1,.];
m2 = u[t,.];
i=t-2;
do until i<1;
 	i1=i+1;
 	ib=t-i+1;
 	x=m1;
 	m1=2*m1-m2;
 	m2=x;
  	if i>2;
   		e1 = v[ib,3]*m2+v[ib,2]*m1+tt[i,.];
   		e2 = v[ib,2]*m2+v[ib,1]*m1+d[i,.];
   		b11 = v[ib,3]+v[i1,1];
   		b12 = v[ib,2]+v[i1,2];
   		b22 = v[ib,1]+v[i1,3];
   		de = b11*b22-b12*b12;
   		tt[i,.] = (-b12*e1+b11*e2)/de;
  	endif;
	de = v[ib,1]*v[ib,3]-v[ib,2]*v[ib,2];
 	v11 = v[ib,3]/de;
 	v12 = -v[ib,2]/de;
 	z = (u[i,.]-m1)/(v11+1);
 	m1 = m1 +v11*z;
 	m2 = m2 +v12*z;
 	i=i-1;
endo;

tt[1,.] = m1;
tt[2,.] = m2;

i=1;
do until i>t;
 	d[i,.] = u[i,.]-tt[i,.];
 	i=i+1;
endo;

hu=tt;
uU = d-ones(t,ff)*meanc(D);
retp(uu);
endp;



/* THIS PROCEDURE EVALUATES THE LIKELIHOOD FUNCTION */
proc ofn(th);
local gamm1,gamm2,alpha1,alpha2,beta,sigu,ppuc,ppub,expc,expb,cstar,bstar,expx,expy,proby,fy,rho;


/* READ INITIAL VALUES */
gamm1 = th[1];
rho = th[2];
alpha1 = th[3];
alpha2 = th[3];
beta = th[4];
sigu = abs(th[5]);


/* CALCULATE LOG LIKELIHOOD FUNCTION OF i(t) */
ppuc = (nint - gamm1 - rho*pint - alpha1*cpiinf - beta*hpun)/sigu;
expc = 1/sigu*pdfn(ppuc);

/* Log likelihood function */
expy = expc;
expy = real(expy);
expy = subscat(expy,0,1.e-6);
proby = ln(expy);
fy = sumc(proby);

retp(-fy);
endp;




